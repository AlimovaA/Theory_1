= По позитивности: 
- Позитивное тестирование - тестирование, когда применяются сценарии, которые соответсвуют нормальному ожидаемому поведению системы (на примере калькулятора 2+2=4) 
- Негативное тестирование - внештатное поведеие системы (на примере калькулятора деление на 0, мы должны получить сообщение об ошибке) = По степени важности: 
- Smoke тестирование - проводится на начальном этапе, либо после нового билда (промежуточная версия продукта), направленно на проверку готовности разрабатываемого продукта к проведению расширенного тестирования и определения общего состояния качества продукта - проверка основных функций. (например: логинимся -> поиск товара -> добавляем в корзину товар -> производим оплату -> получаем заказ) - 1 тест-кейс - быстрые 
- Тест критического пути - проверка на правильность работы при стандартном использовании (типичный пользователь выполняет свои типичные задачи) - проверяется основная масса требований к продукту -> например, выбор шрифта, возможность набора текста, вставка картинок и т.д. 
- Расширенное тестирование - проверка нестандартного использования программного продукта (например, спецсимволы в поле логина, либо нелогично кликать по клавищам, работа на многих вкладках одновременно, т.е. максимально загрузить систему) 
= 
По уровням: 
- Компонентное - отдельные компоненты исходного кода программы (напр. стр. авторизации, поиск товара, перемещение его в корзину, оплата заказа) 
- Интеграционное - тестирование части системы, состоящей из 2-ух и более модулей (напр. как со стр. корзины мы можем произвести оплату посредством платежной системы) 
- Системное - выполняется на полной интегрированной системе (напр.зарегистрироваться, найти товар, положить товар в корзину, оплатить заказ, отслеживать наш товар в пути -> т.е. пройти весь бизнес-флоу) 
- Приемочное - целью является определение готовности 
продукта, финальный этап тестирования перед релизом. Виды приемочного 
тестирования: 
1) Пользовательское приемочное тестирование - проводится пользователями конечного продукта, собирается группа людей, которые его 
протестируют и дадут нам заключение. 
2) Эксплутационное - выполняется либо пользователями, либо администратором в среде, который имитирует реальные условия рабочего окружения (проверяется тестирование резервного копирования, аварийного восстановления системы, также его безопасность) 
3) На соответствие контракту - проверка на соответствие спецификации, либо нормативному акту (напр, в стране есть ГОСТ, либо документ GDPR, который определяет требования к защите пользовательских данных)
4) Альфа-тестирование - проводится на стороне разработчика, но не в рамках нашей компании)
5) Бета-тестирование - проводится на внешней стороне, без участия разработчиков, т.е. заказчик выбирает ключевую группу пользователей -> тестируют -> дают заключение.
=
По запуску кода:
1) Статическое - тестирование любых форм документации.
2) Динамическое - предполагает запуск программного кода.
=1=
По знанию кода:
1) Тестирование черного ящика - тестировщик производит тестирование, не имея информации о том, как устроена система изнутри, работаем с внешними интерфейсами тестируемой системы.
Например, тестирование веб-сайта - поля ввода и кнопки - только GUI.
2) Тестирование белого ящика - нам известна и мы понимаем внутреннюю структуру - обычно проводится программистами.
Например, программист изучает реализацию кода ввода на веб-странице.
3) Тестирование серого ящика - предполагает частичное знание внутренней системы.
Например, тестирование API.
